// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id       String   @id @default(cuid())
  name     String   @unique @default("")
  email    String   @unique @default("")
  password String
  isAdmin  Boolean  @default(false)
  account  Account? @relation("Account_user")
}

model Account {
  id        String  @id @default(cuid())
  firstName String  @default("")
  lastName  String  @default("")
  phone     String  @unique @default("")
  address1  String  @default("")
  address2  String  @default("")
  city      String  @default("")
  state     State?  @relation("Account_state", fields: [stateId], references: [id])
  stateId   String? @map("state")
  zip       Int?
  user      User?   @relation("Account_user", fields: [userId], references: [id])
  userId    String? @unique @map("user")

  @@index([stateId])
}

model Tag {
  id        String     @id @default(cuid())
  name      String     @default("")
  locations Location[] @relation("Location_tags")
}

model Location {
  id               String    @id @default(cuid())
  name             String    @default("")
  shortDescription String    @default("")
  state            State?    @relation("Location_state", fields: [stateId], references: [id])
  stateId          String?   @map("state")
  city             City?     @relation("Location_city", fields: [cityId], references: [id])
  cityId           String?   @map("city")
  status           String?
  description      Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  createdDate      DateTime?
  tags             Tag[]     @relation("Location_tags")
  images           Image[]   @relation("Image_locations")

  @@index([stateId])
  @@index([cityId])
}

model FipsGeo {
  id                  String             @id @default(cuid())
  areaName            String             @default("")
  summaryLevel        String?
  state               State?             @relation("FipsGeo_state", fields: [stateId], references: [id])
  stateId             String?            @map("state")
  county              County?            @relation("FipsGeo_county", fields: [countyId], references: [id])
  countyId            String?            @map("county")
  countySubdivision   CountySubdivision? @relation("FipsGeo_countySubdivision", fields: [countySubdivisionId], references: [id])
  countySubdivisionId String?            @map("countySubdivision")
  city                City?              @relation("FipsGeo_city", fields: [cityId], references: [id])
  cityId              String?            @map("city")
  consolidatedCity    String             @default("")

  @@index([stateId])
  @@index([countyId])
  @@index([countySubdivisionId])
  @@index([cityId])
}

model State {
  id                 String              @id @default(cuid())
  code               String              @unique @default("")
  fipsCode           String              @unique @default("")
  name               String              @unique @default("")
  capital            String              @default("")
  largestCity        String              @default("")
  population         Int?
  areaSqMi           Int?
  landAreaSqMi       Int?
  waterAreaSqMi      Int?
  locations          Location[]          @relation("Location_state")
  fipsGeo            FipsGeo[]           @relation("FipsGeo_state")
  county             County[]            @relation("County_state")
  countySubdivision  CountySubdivision[] @relation("CountySubdivision_state")
  city               City[]              @relation("City_state")
  from_Account_state Account[]           @relation("Account_state")
}

model County {
  id                String              @id @default(cuid())
  fipsCode          String              @unique @default("")
  name              String              @default("")
  type              String?
  state             State?              @relation("County_state", fields: [stateId], references: [id])
  stateId           String?             @map("state")
  countySubdivision CountySubdivision[] @relation("CountySubdivision_county")
  fipsGeo           FipsGeo[]           @relation("FipsGeo_county")

  @@index([stateId])
}

model CountySubdivision {
  id       String    @id @default(cuid())
  fipsCode String    @unique @default("")
  name     String    @default("")
  county   County?   @relation("CountySubdivision_county", fields: [countyId], references: [id])
  countyId String?   @map("county")
  state    State?    @relation("CountySubdivision_state", fields: [stateId], references: [id])
  stateId  String?   @map("state")
  fipsGeo  FipsGeo[] @relation("FipsGeo_countySubdivision")

  @@index([countyId])
  @@index([stateId])
}

model City {
  id        String     @id @default(cuid())
  fipsCode  String     @unique @default("")
  name      String     @default("")
  cbsa      String     @default("")
  necta     String     @default("")
  state     State?     @relation("City_state", fields: [stateId], references: [id])
  stateId   String?    @map("state")
  locations Location[] @relation("Location_city")
  fipsGeo   FipsGeo[]  @relation("FipsGeo_city")

  @@index([stateId])
}

model Image {
  id        String     @id @default(cuid())
  filename  String     @default("")
  locations Location[] @relation("Image_locations")
}

model ContentBlock {
  id         String  @id @default(cuid())
  active     Boolean @default(false)
  page       String  @default("")
  column     Int?
  blockOrder Int?
  richText   Json    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model Page {
  id       String  @id @default(cuid())
  active   Boolean @default(false)
  name     String  @default("")
  title    String  @default("")
  subTitle String  @default("")
}
